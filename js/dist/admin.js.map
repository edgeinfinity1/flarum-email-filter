{"version":3,"sources":["webpack://@nyu8/flarum-email-filter/webpack/bootstrap","webpack://@nyu8/flarum-email-filter/external \"flarum.core.compat['admin/app']\"","webpack://@nyu8/flarum-email-filter/external \"flarum.core.compat['common/Model']\"","webpack://@nyu8/flarum-email-filter/external \"flarum.core.compat['common/components/Button']\"","webpack://@nyu8/flarum-email-filter/external \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@nyu8/flarum-email-filter/external \"flarum.core.compat['common/components/Switch']\"","webpack://@nyu8/flarum-email-filter/external \"flarum.extensions['fof-components']\"","webpack://@nyu8/flarum-email-filter/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@nyu8/flarum-email-filter/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@nyu8/flarum-email-filter/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@nyu8/flarum-email-filter/./node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","webpack://@nyu8/flarum-email-filter/./node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","webpack://@nyu8/flarum-email-filter/./src/common/models/rule.js","webpack://@nyu8/flarum-email-filter/./src/admin/utils.js","webpack://@nyu8/flarum-email-filter/./src/admin/components/storage.js","webpack://@nyu8/flarum-email-filter/./src/admin/components/EmailFilterSettingsPage.js","webpack://@nyu8/flarum-email-filter/./src/admin/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","extensions","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","_classPrivateFieldBase","receiver","privateKey","TypeError","id","_classPrivateFieldKey","Rule","ruleType","Model","attribute","active","RULE_TYPE_TO_STORAGE_KEY","1","2","3","4","getStorageKeys","values","ruleTypeToStorageKey","String","Error","storageKeyToRuleType","entry","Array","from","entries","find","Number","checkRegexSyntax","text","RegExp","error","Storage","onStorageUpdate","data","getDefaultStorageData","newRules","getDefaultNewRuleDict","undefined","loadRules","rules","rule","storageKey","getStorageRuleList","push","this","app","store","then","getNewRule","addRule","newRule","includes","createRecord","save","removeRule","ruleList","index","findIndex","item","splice","updateRuleName","pushAttributes","updateRuleValue","saveRule","attributes","toggleRuleActivity","StringItem","settings","items","EmailFilterSettingsPage","oninit","vnode","setting","storage","redraw","content","className","translator","trans","style","class","submitButton","map","ExtensionPage","extensionPrefix","buildOnInputFinished","alerts","show","type","state","onchange","placeholder","oninput","event","target","onblur","icon","onclick","initializers","add","models","email_rules","extensionData","registerPage"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = flarum.core.compat['admin/app'];","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['admin/components/ExtensionPage'];","module.exports = flarum.core.compat['common/components/Switch'];","module.exports = flarum.extensions['fof-components'];","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _classPrivateFieldBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n\n  return receiver;\n}","var id = 0;\nexport default function _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}","import Model from 'flarum/common/Model';\n\nexport default class Rule extends Model {\n  /**\n   * @type {() => number}\n   */\n  ruleType = Model.attribute('ruleType');\n  /**\n   * @type {() => string}\n   */\n  name = Model.attribute('name');\n  /**\n   * @type {() => string}\n   */\n  value = Model.attribute('value');\n  /**\n   * @type {() => number}\n   */\n  active = Model.attribute('active');\n}\n","const RULE_TYPE_TO_STORAGE_KEY = {\n  1: 'whitelist_literal',\n  2: 'whitelist_regex',\n  3: 'blacklist_literal',\n  4: 'blacklist_regex',\n};\n\nexport function getStorageKeys() {\n  return Object.values(RULE_TYPE_TO_STORAGE_KEY);\n}\n\n/**\n * @returns {StorageData}\n */\nexport function getDefaultStorageData() {\n  let keys = getStorageKeys();\n\n  let data = {};\n\n  for (let key of keys) {\n    data[key] = [];\n  }\n\n  return data;\n}\n\n/**\n * @returns {NewRuleDict}\n */\nexport function getDefaultNewRuleDict() {\n  let keys = getStorageKeys();\n\n  let data = {};\n\n  for (let key of keys) {\n    data[key] = {\n      name: '',\n      value: '',\n    };\n  }\n\n  return data;\n}\n\n/**\n * @param {number} ruleType\n * @returns {string}\n */\nexport function ruleTypeToStorageKey(ruleType) {\n  ruleType = String(ruleType);\n\n  if (!(ruleType in RULE_TYPE_TO_STORAGE_KEY)) {\n    throw new Error(`Invalid rule type: ${ruleType}`);\n  }\n\n  return RULE_TYPE_TO_STORAGE_KEY[ruleType];\n}\n\n/**\n * @param {string} key\n * @returns {number}\n */\nexport function storageKeyToRuleType(key) {\n  let entries = Array.from(Object.entries(RULE_TYPE_TO_STORAGE_KEY));\n\n  let entry = entries.find(entry => entry[1] === key);\n\n  if (!entry) {\n    throw new Error(`Invalid storage key: ${key}`);\n  }\n\n  return Number(entry[0]);\n}\n\n/**\n * @param {string} text\n */\nexport function checkRegexSyntax(text) {\n  try {\n    new RegExp(text);\n  } catch (error) {\n    return false;\n  }\n\n  return true;\n}\n","import app from 'flarum/admin/app';\nimport Rule from '../../common/models/rule';\nimport {\n  checkRegexSyntax,\n  getDefaultNewRuleDict,\n  getDefaultStorageData,\n  ruleTypeToStorageKey,\n  storageKeyToRuleType,\n} from '../utils';\n\nexport class Storage {\n  data = getDefaultStorageData();\n  newRules = getDefaultNewRuleDict();\n  onStorageUpdate = undefined;\n\n  constructor(onStorageUpdate) {\n    if (onStorageUpdate) {\n      this.onStorageUpdate = onStorageUpdate;\n    }\n\n    app.store.find('email_rules').then(this.loadRules);\n  }\n\n  /**\n   * @param {string} storageKey\n   * @returns {Rule[]}\n   */\n  getStorageRuleList(storageKey) {\n    if (!(storageKey in this.data)) {\n      throw new Error(`Invalid storage key: ${storageKey}`);\n    }\n\n    return this.data[storageKey];\n  }\n\n  /**\n   * @param {Rule[]} rules\n   */\n  loadRules = rules => {\n    for (let rule of rules) {\n      let storageKey = ruleTypeToStorageKey(rule.ruleType());\n      this.getStorageRuleList(storageKey).push(rule);\n      this.#callUpdate();\n    }\n  };\n\n  /**\n   * @param {string} storageKey\n   * @returns {NewRule}\n   */\n  getNewRule(storageKey) {\n    if (!(storageKey in this.newRules)) {\n      throw new Error(`Invalid storage key: ${storageKey}`);\n    }\n\n    return this.newRules[storageKey];\n  }\n\n  /**\n   * @param {string} storageKey\n   * @param {NewRule} newRule\n   */\n  addRule(storageKey, newRule) {\n    if (storageKey.includes('regex') && !checkRegexSyntax(newRule.value)) {\n      throw new Error('Invalid regular expression');\n    }\n\n    app.store\n      .createRecord('email_rules')\n      .save({\n        ruleType: storageKeyToRuleType(storageKey),\n        name: newRule.name,\n        value: newRule.value,\n        active: 1,\n      })\n      .then(rule => {\n        newRule.name = '';\n        newRule.value = '';\n        this.getStorageRuleList(storageKey).push(rule);\n        this.#callUpdate();\n      });\n  }\n\n  /**\n   * @param {string} storageKey\n   * @param {Rule} rule\n   */\n  removeRule(storageKey, rule) {\n    rule.delete();\n\n    let ruleList = this.getStorageRuleList(storageKey);\n    let index = ruleList.findIndex(item => item.data.id === rule.data.id);\n    if (index < 0) {\n      return;\n    }\n    ruleList.splice(index, 1);\n  }\n\n  /**\n   * @param {Rule} rule\n   * @param {string} name\n   */\n  updateRuleName(rule, name) {\n    rule.pushAttributes({name});\n  }\n\n  /**\n   * @param {Rule} rule\n   * @param {string} value\n   */\n  updateRuleValue(rule, value) {\n    rule.pushAttributes({value});\n  }\n\n  /**\n   * @param {Rule} rule\n   * @param {string|undefined} attribute\n   */\n  saveRule(rule, attribute) {\n    if (attribute) {\n      if (\n        attribute === 'value' &&\n        ruleTypeToStorageKey(rule.ruleType()).includes('regex')\n      ) {\n        let value = rule.value();\n        if (!checkRegexSyntax(value)) {\n          throw new Error('Invalid regular expression');\n        }\n      }\n      rule.save({[attribute]: rule.attribute(attribute)});\n    } else {\n      rule.save(rule.data.attributes);\n    }\n  }\n\n  /**\n   * @param {Rule} rule\n   */\n  toggleRuleActivity(rule) {\n    rule.save({\n      active: 1 - rule.active(),\n    });\n  }\n\n  #callUpdate() {\n    if (!this.onStorageUpdate) {\n      return;\n    }\n\n    this.onStorageUpdate();\n  }\n}\n","import app from 'flarum/admin/app';\n\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport Button from 'flarum/common/components/Button';\nimport Switch from 'flarum/common/components/Switch';\n\nimport {settings} from '@fof-components';\n\nimport {Storage} from './storage';\nimport {getStorageKeys} from '../utils';\n\nconst {\n  items: {StringItem},\n} = settings;\n\nexport default class EmailFilterSettingsPage extends ExtensionPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.setting = this.setting.bind(this);\n    this.storage = new Storage(() => {\n      m.redraw();\n    });\n  }\n\n  content() {\n    return (\n      <div className=\"container\">\n        <div className=\"EmailFilterSettingsPage\">\n          <div className=\"SettingsSection GeneralPreferences\">\n            <h3>{app.translator.trans('nyu8-email-filter.admin.general')}</h3>\n            <div className=\"Form-group\">\n              <StringItem\n                name=\"nyu8-email-filter.custom_failure_message\"\n                setting={this.setting}\n                style=\"max-width: 500px\"\n              >\n                {app.translator.trans(\n                  'nyu8-email-filter.admin.custom_failure_message_label',\n                )}\n                <div class=\"hint\">\n                  {app.translator.trans(\n                    'nyu8-email-filter.admin.custom_failure_message_hint',\n                  )}\n                </div>\n              </StringItem>\n            </div>\n            {this.submitButton()}\n          </div>\n          <div className=\"SettingsSection RuleSettings\">\n            <h3>\n              {app.translator.trans('nyu8-email-filter.admin.rule_settings')}\n            </h3>\n            {getStorageKeys().map(storageKey =>\n              this.#getRuleSettings(storageKey),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * @param {string} storageKey\n   */\n  #getRuleSettings(storageKey) {\n    let extensionPrefix = `nyu8-email-filter.admin.${storageKey}`;\n\n    return (\n      <div className={`Rule-section settingsPage-${storageKey}`}>\n        <legend>{app.translator.trans(`${extensionPrefix}.label`)}</legend>\n        <div className=\"description\">\n          {app.translator.trans(`${extensionPrefix}.description`)}\n        </div>\n        <div className=\"rulesContainer\">\n          {this.#getExistingRuleSettings(storageKey, extensionPrefix)}\n          {this.#getNewRuleSettings(storageKey, extensionPrefix)}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * @param {string} storageKey\n   * @param {string} extensionPrefix\n   */\n  #getExistingRuleSettings(storageKey, extensionPrefix) {\n    return this.storage.getStorageRuleList(storageKey).map(rule => {\n      let onActivitySwitch = () => {\n        this.storage.toggleRuleActivity(rule);\n      };\n\n      let onNameInput = event => {\n        this.storage.updateRuleName(rule, event.target.value);\n      };\n\n      let onValueInput = event => {\n        this.storage.updateRuleValue(rule, event.target.value);\n      };\n\n      /**\n       * @param {string} attribute\n       * @returns\n       */\n      let buildOnInputFinished = attribute => () => {\n        try {\n          this.storage.saveRule(rule, attribute);\n        } catch (error) {\n          if (String(error).includes('Invalid regular expression')) {\n            app.alerts.show(\n              {type: 'error'},\n              app.translator.trans(\n                'nyu8-email-filter.admin.invalid_regular_expression',\n              ),\n            );\n          }\n        }\n      };\n\n      let onDeleteButtonClick = () => {\n        this.storage.removeRule(storageKey, rule);\n      };\n\n      return (\n        <div className=\"Rules-existing\">\n          <Switch\n            className=\"Rules-switch\"\n            state={rule.active()}\n            onchange={onActivitySwitch}\n          ></Switch>\n          <input\n            className=\"FormControl Rules-name\"\n            value={rule.name()}\n            placeholder={app.translator.trans(\n              'nyu8-email-filter.admin.name_placeholder',\n            )}\n            oninput={onNameInput}\n            onblur={buildOnInputFinished('name')}\n          ></input>\n          <input\n            className=\"FormControl Rules-value\"\n            value={rule.value()}\n            placeholder={app.translator.trans(`${extensionPrefix}.placeholder`)}\n            oninput={onValueInput}\n            onblur={buildOnInputFinished('value')}\n          ></input>\n          <Button\n            type=\"button\"\n            className=\"Button Button--icon no-label Rules-button\"\n            icon=\"fa fa-times\"\n            onclick={onDeleteButtonClick}\n          ></Button>\n        </div>\n      );\n    });\n  }\n\n  /**\n   * @param {string} storageKey\n   * @param {string} extensionPrefix\n   */\n  #getNewRuleSettings(storageKey, extensionPrefix) {\n    let newRule = this.storage.getNewRule(storageKey);\n\n    let onNameInput = event => {\n      newRule.name = event.target.value;\n    };\n\n    let onValueInput = event => {\n      newRule.value = event.target.value;\n    };\n\n    let onAddButtonClick = () => {\n      try {\n        this.storage.addRule(storageKey, newRule);\n      } catch (error) {\n        if (String(error).includes('Invalid regular expression')) {\n          app.alerts.show(\n            {type: 'error'},\n            app.translator.trans(\n              'nyu8-email-filter.admin.invalid_regular_expression',\n            ),\n          );\n        }\n      }\n    };\n\n    return (\n      <div className=\"Rules-new\">\n        <input\n          className=\"FormControl Rules-name\"\n          value={newRule.name}\n          placeholder={app.translator.trans(\n            'nyu8-email-filter.admin.name_placeholder',\n          )}\n          oninput={onNameInput}\n        ></input>\n        <input\n          className=\"FormControl Rules-value\"\n          value={newRule.value}\n          placeholder={app.translator.trans(`${extensionPrefix}.placeholder`)}\n          oninput={onValueInput}\n        ></input>\n        <Button\n          type=\"button\"\n          className=\"Button Button--warning no-label Rules-button\"\n          icon=\"fa fa-plus\"\n          onclick={onAddButtonClick}\n        ></Button>\n      </div>\n    );\n  }\n}\n","import app from 'flarum/admin/app';\nimport EmailFilterSettingsPage from './components/EmailFilterSettingsPage';\nimport Rule from '../common/models/rule';\n\napp.initializers.add('nyu8-email-filter', () => {\n  app.store.models.email_rules = Rule;\n\n  app.extensionData\n    .for('nyu8-email-filter')\n    .registerPage(EmailFilterSettingsPage);\n});\n"],"sourceRoot":""}